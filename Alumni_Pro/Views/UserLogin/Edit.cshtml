@model DatabaseContext.UserTbl

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/View.cshtml";
}



@using (Html.BeginForm("Edit", "UserLogin", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Create User</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.UserID)

    <div class="form-group">
        @Html.LabelFor(model => model.UserTypeID, "Select User Type", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("UserTypeID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.UserTypeID, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.FirstName, "First Name", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MiddleName, "Middle Name", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LastName, "Last Name", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AdditionalName, "Additional Name", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.AdditionalName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AdditionalName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MobileNo, "Mobile No", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AlternateMobileNo, "Alternate Mobile No", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.AlternateMobileNo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AlternateMobileNo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LandlineNo, "Landline No", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LandlineNo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LandlineNo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EmailAddress, "Email Address", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Password, "Password", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ConfirmPassword, "Confirm Password", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Gender, "Gender", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Gender, new List<SelectListItem>
    {
        new SelectListItem { Text = "Male", Value = "Male" },
        new SelectListItem { Text = "Female", Value = "Female" },
        new SelectListItem { Text = "Other", Value = "Other" }
    }, "Select gender", new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DateOfBirth, "Date Of Birth", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.LabelFor(model => model.DateOfBirth)
            @Html.TextBoxFor(model => model.DateOfBirth, "{0:yyyy-MM-dd}", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.DateOfBirth)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MaritalStatus, "Marital Status", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.MaritalStatus, new List<SelectListItem>
            {
                new SelectListItem { Text = "Married", Value = "Married" },
                new SelectListItem { Text = "UnMarried", Value = "UnMarried" }
            }, "Select Marital Status", new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MarriageDate, "Marriage Date", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.LabelFor(model => model.MarriageDate)
            @Html.TextBoxFor(model => model.MarriageDate, "{0:yyyy-MM-dd}", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.MarriageDate)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Address, "Address", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.City, "City", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.State, "State", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.State, new List<SelectListItem>
            {
                new SelectListItem { Text = "Maharashtra", Value = "Maharashtra" },
                new SelectListItem { Text = "Gujrat", Value = "Gujrat" },
                new SelectListItem { Text = "MP", Value = "MP" },
                new SelectListItem { Text = "UP", Value = "UP" }
            }, new { @class = "form-control", placeholder = "Maharashtra" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Country, "Country", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Country, new List<SelectListItem>
            {
                new SelectListItem { Text = "Bharat", Value = "Bharat" },
                new SelectListItem { Text = "UK", Value = "UK" },
                new SelectListItem { Text = "Spain", Value = "Spain" }
            }, new { @class = "form-control", placeholder = "Bharat" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, "Your Profile in brief with activities done after college", htmlAttributes: new { @class = "control-label col-md-10" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control " } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Profession, "Profession", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Profession, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Profession, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Hobbies, "Hobbies and Passion", htmlAttributes: new { @class = "control-label col-md-12" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Hobbies, new { htmlAttributes = new { @class = "form-control", rows = "4" } })
            @Html.ValidationMessageFor(model => model.Hobbies, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Experience, "Experience and Expertise in the field in which you would like to, help other members", htmlAttributes: new { @class = "control-label col-md-12" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Experience, new { htmlAttributes = new { @class = "form-control", rows = "4" } })
            @Html.ValidationMessageFor(model => model.Experience, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FamilyInfo, "FamilyInfo", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FamilyInfo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FamilyInfo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OtherInfo, "Any Other Info would like to share with", htmlAttributes: new { @class = "control-label col-md-12" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.OtherInfo, new { htmlAttributes = new { @class = "form-control", rows = "4" } })
            @Html.ValidationMessageFor(model => model.OtherInfo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Photo)
        @if (!string.IsNullOrEmpty(Model.Photo))
        {
            <img src="@Url.Content(Model.Photo)" alt="Image" style="width:100px; height:150px; max-width:100%; height:auto;" />
        }
        <input type="file" name="File" id="File" accept=".jpg,.jpeg,.png" />
        @Html.ValidationMessageFor(model => model.Photo)
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CollegePhoto)
        @if (!string.IsNullOrEmpty(Model.CollegePhoto))
        {
            <img src="@Url.Content(Model.CollegePhoto)" alt="Image" style="width:100px; height:150px; max-width:100%; height:auto;" />
        }
        <input type="file" name="CollegePhotoFile" id="CollegePhotoFile" accept=".jpg,.jpeg,.png" />
        @Html.ValidationMessageFor(model => model.CollegePhoto)
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CouplePhoto)
        @if (!string.IsNullOrEmpty(Model.CouplePhoto))
        {
            <img src="@Url.Content(Model.CouplePhoto)" alt="Image" style="width:100px; height:150px; max-width:100%; height:auto;" />
        }
        <input type="file" name="CouplePhotoFile" id="CouplePhotoFile" accept=".jpg,.jpeg,.png" />
        @Html.ValidationMessageFor(model => model.CouplePhoto)
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FamilyPhoto)
        @if (!string.IsNullOrEmpty(Model.FamilyPhoto))
        {
            <img src="@Url.Content(Model.FamilyPhoto)" alt="Image" style="width:100px; height:150px; max-width:100%; height:auto;" />

        }
        <input type="file" name="FamilyPhotoFile" id="FamilyPhotoFile" accept=".jpg,.jpeg,.png" />
        @Html.ValidationMessageFor(model => model.FamilyPhoto)
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-success" />
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })
        </div>
    </div>
</div>
}


